#+TITLE: Differences between cl-patterns and SuperCollider patterns

This document is a WIP.

* Terminology

- SuperCollider requires you to coerce a pattern into a ~Stream~ in order to get results from it. Common Lisp already has the notion of a stream, so pattern streams are known as ~pstream~s.

* New features

This section lists new features relative to SuperCollider's patterns system. For more, and for a complete listing of notable cl-patterns features, see [[file:features.org][features.org]].

- ~pwrand~ / ~pwxrand~ - weights are automatically normalized.
- pdurstutter - works on event streams as well as number streams. (as do any duration-based patterns)

* Changed behaviors

- non-patterns converted to pstreams only return one value:
#+BEGIN_SRC lisp
(defparameter *foo* (as-pstream 1))

(next-n *foo* 3) ;=> (1 NIL NIL)
#+END_SRC
- ~pbeats~ is the pattern that returns the number of beats elapsed in the pstream (in SuperCollider it's known as ~Ptime~).
- pdefs loop by default when played.
This is because their ~loop-p~ slot default to ~t~. Set it to ~nil~ to prevent this.
