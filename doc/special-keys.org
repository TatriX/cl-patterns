#+TITLE: Event Special Keys

This is a list of special keys for events/pbind. These keys have additional functionality to do things like alter how the pattern is played, automate conversions between types, etc. Some of these only work in pbinds, and have no effect in events.

* Event builtins and conversions

Some event keys are used to set standard parameters for the synth (i.e. ~instrument~, ~out~, etc). Additionally, cl-collider will automatically convert between different units of measurement for data that represents the same property. For example, you can write a pattern that generates pitches based on midi note numbers with ~midinote~. Then, in another key after that, you can use ~(pk :freq)~ to get the frequency of the note (which is automagically converted from the ~midinote~ value, as if you had used ~midinote-freq~ on it).

** ~instrument~ / ~inst~ - name of the synth you want to trigger.
** ~amp~ / ~db~ - volume of the synth.
** ~freq~ / ~midinote~ / ~degree~ + ~octave~ + ~root~ - various ways to specify the pitch of the synth.
** ~dur~ / ~delta~ - how long before the next note starts.
** ~sustain~ / ~legato~ - how long the synth is held before being released.
** ~tempo~ - set the clock's tempo.
** ~pdef~ - the name of the pattern. (see the ~pdef~ pattern for more information.)
** ~pbeat~ - how many beats have elapsed in the pattern.

* pbind pattern convenience keys

pbind supports a set of special keys that effectively surround the pbind in another type of pattern. For example, a pbind that looks like this:

#+BEGIN_SRC lisp
  (pbind :midinote (pseq '(60 62 64) 1)
         :pdurstutter (pseq '(3 2 1) 1))
#+END_SRC

...actually returns this:

#+BEGIN_SRC lisp
  (pdurstutter (pbind :midinote (pseq '(60 62 64) 1))
               (pseq '(3 2 1) 1))
#+END_SRC

Here is a listing of all such keys:

** ~parp~ - ~(parp (pbind ...) value)~
** ~pfin~ - ~(pfin (pbind ...) value)~
** ~pfindur~ - ~(pfindur (pbind ...) value)~
** ~pdurstutter~ - ~(pdurstutter (pbind ...) value)~
** ~ptrace~ - ~(ptrace (pbind ...))~
